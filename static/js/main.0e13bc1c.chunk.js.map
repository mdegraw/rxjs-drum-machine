{"version":3,"sources":["components/bpm/bpm.component.tsx","components/step/step.component.tsx","enums/instrument.enum.ts","utils/sounds.util.ts","hooks/use-observable-effect.hook.ts","components/sequence/sequence.component.tsx","utils/range.util.ts","components/controls/controls.component.tsx","interfaces/channel.interface.ts","components/channel/channel.component.tsx","interfaces/state.interface.ts","utils/noop.util.ts","components/board/board.component.tsx","utils/clock.util.ts","utils/bpm-to-ms.util.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","bpmBox","padding","slider","width","BpmControl","bpm$","useState","value","bpm","setBpm","classes","Box","display","flexDirection","Slider","min","max","className","onChange","_","val","onChangeCommitted","next","Typography","variant","border","color","baseStyle","height","backgroundColor","cursor","off","on","highlight","highlightOn","Step","step","isOn","isCurrentStep","updateSteps","setOn","Paper","square","onClick","Instrument","baseUrl","snare","Howl","src","kick","hihat","maracas","clave","rimshot","toms","clap","conga","cowbell","InstrumentConfig","HiHat","trigger","play","Kick","Snare","Toms","Maracas","Clave","Clap","Cowbell","Conga","Rimshot","useObservableEffect","observable$","subscriptionCb","cb","useEffect","subscription","subscribe","err","console","log","unsubscribe","start","end","DEFAULT_STEPS","Array","from","length","i","map","root","Sequence","clock$","channel$","steps","setSteps","currentStep","setCurrentStep","tempSteps","pipe","withLatestFrom","filter","instrument","volume","Grid","container","spacing","item","xs","direction","justify","key","formControl","margin","minWidth","Controls","setInstrument","updateVolume","justifyContent","FormControl","Select","displayEmpty","id","event","newInstrument","target","MenuItem","disabled","Object","entries","style","Channel","BehaviorSubject","getInitialChannel","marginBottom","INITIAL_STATE","pauseStep","noop","wrapper","channel","button","bpmControl","play$","boardEvents$","merge","startWith","scan","state","curr","switchMap","interval","Infinity","tap","NEVER","clockPipeline","publish","Board","connect","DEFAULT_CHANNELS","channels","setChannels","isPlaying","setIsPlaying","updatePlay","isPlay","marginRight","Button","startIcon","App","React","useMemo","createMuiTheme","palette","type","primary","main","secondary","ThemeProvider","CssBaseline","Container","fixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0e13bc1c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { Slider } from '@material-ui/core';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\ninterface IBpmControlProp {\n  bpm$: BehaviorSubject<{ bpm: number }>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    bpmBox: {\n      padding: '3px !important',\n    },\n    slider: {\n      width: '200px',\n      'margin-top': '25px',\n      'margin-right': '15px',\n    },\n  }),\n);\n\n\nexport default function BpmControl({ bpm$ }: IBpmControlProp) {\n  const [bpm, setBpm] = useState(bpm$.value.bpm);\n\n  const classes = useStyles();\n\n  return (\n    <Box display='flex' flexDirection='row'>\n      <Slider\n        min={10}\n        max={400}\n        className={classes.slider}\n        value={bpm}\n        onChange={(_: any, val: number | number[]) => { if (typeof val === 'number') setBpm(val)}}\n        onChangeCommitted={(_: any, val: number | number[]) => { if (typeof val === 'number') bpm$.next({ bpm: val })}}\n      />\n      <Box display='flex' flexDirection='column'>\n        <Typography variant='caption'>bpm</Typography>\n        <Box border={1}>\n          <Typography className={classes.bpmBox} color='secondary' variant='h6'>{bpm}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\ninterface IStepProp {\n  step: number;\n  isCurrentStep: boolean;\n  isOn: boolean;\n  updateSteps: (step: number, isOn: boolean) => void;\n}\nconst baseStyle = {\n  height: 30,\n  width: 20,\n  backgroundColor: '#90a4ae',\n  cursor: 'pointer',\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    off: baseStyle,\n    on: {\n      ...baseStyle,\n      backgroundColor: '#63d8ce',\n    },\n    highlight: {\n      ...baseStyle,\n      backgroundColor: '#8FEEF3',\n    },\n    highlightOn:{\n      ...baseStyle,\n      backgroundColor: '#c4fcff',\n    }\n  }),\n);\n\nexport default function Step({ step, isOn, isCurrentStep, updateSteps }: IStepProp) {\n  const [on, setOn] = useState(isOn);\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      square={true}\n      className={isCurrentStep && on\n        ? classes.highlightOn\n        : isCurrentStep\n        ? classes.highlight\n        : on\n        ? classes.on\n        : classes.off}\n      onClick={() => {\n        setOn(!on);\n        updateSteps(step, !on);\n      }}\n    />\n  ); \n}","import {\n  playHiHat,\n  playKick,\n  playSnare,\n  playToms,\n  playMaracas,\n  playClave,\n  playCowbell,\n  playRimshot,\n  playConga,\n  playClap,\n} from './../utils/sounds.util';\n\nexport enum Instrument {\n  Kick = 'Kick',\n  Snare = 'Snare',\n  Toms = 'Toms',\n  Rimshot = 'Rimshot',\n  Maracas = 'Maracas',\n  Conga = 'Conga',\n  Clave = 'Clave',\n  HiHat = 'HiHat',\n  Clap = 'Clap',\n  Cowbell = 'Cowbell',\n}\n\nexport const InstrumentConfig = {\n  [Instrument.HiHat]: {\n    trigger: playHiHat,\n  },\n  [Instrument.Kick]: {\n    trigger: playKick,\n  },\n  [Instrument.Snare]: {\n    trigger: playSnare,\n  },\n  [Instrument.Toms]: {\n    trigger: playToms,\n  },\n  [Instrument.Maracas]: {\n    trigger: playMaracas,\n  },\n  [Instrument.Clave]: {\n    trigger: playClave,\n  },\n  [Instrument.Clap]: {\n    trigger: playClap,\n  },\n  [Instrument.Cowbell]: {\n    trigger: playCowbell,\n  },\n  [Instrument.Conga]: {\n    trigger: playConga,\n  },\n  [Instrument.Rimshot]: {\n    trigger: playRimshot,\n  },\n};","import { Howl } from 'howler';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? '/rxjs-drum-machine/sounds' : '/sounds';\n\nconst snare = new Howl({ src: [`${baseUrl}/snare.mp3`] });\nconst kick = new Howl({ src: [`${baseUrl}/kick.mp3`] });\nconst hihat = new Howl({ src: [`${baseUrl}/hihat.mp3`] });\nconst maracas = new Howl({ src: [`${baseUrl}/maracas.mp3`] });\nconst clave = new Howl({ src: [`${baseUrl}/clave.mp3`] });\nconst rimshot = new Howl({ src: [`${baseUrl}/rimshot.mp3`] });\nconst toms = new Howl({ src: [`${baseUrl}/toms.mp3`] });\nconst clap = new Howl({ src: [`${baseUrl}/clap.mp3`] });\nconst conga = new Howl({ src: [`${baseUrl}/conga.mp3`] });\nconst cowbell = new Howl({ src: [`${baseUrl}/cowbell.mp3`] });\n\nexport const playKick = () => {\n  kick.play();\n}\n\nexport const playHiHat = () => {\n  hihat.play();\n};\n\nexport const playSnare = () => {\n  snare.play();\n};\n\nexport const playMaracas = () => {\n  maracas.play();\n};\n\nexport const playRimshot = () => {\n  rimshot.play();\n};\n\nexport const playClave = () => {\n  clave.play();\n};\n\nexport const playClap = () => {\n  clap.play();\n};\n\nexport const playCowbell = () => {\n  cowbell.play();\n};\n\nexport const playToms = () => {\n  toms.play();\n};\n\nexport const playConga = () => {\n  conga.play();\n};\n","import { useEffect } from 'react';\nimport { Observable } from 'rxjs';\n\n/* eslint-disable react-hooks/exhaustive-deps */\nexport function useObservableEffect<T>(observable$: Observable<T>, subscriptionCb?: (...args: any[]) => void, cb?: (...args: any[]) => void) {\n  useEffect(() => {\n    const subscription = observable$.subscribe(subscriptionCb, err => console.log(`Subscription Effect Error: ${err}`));\n\n    if (cb && typeof cb === 'function') {\n      cb();\n    }\n\n    return () => subscription.unsubscribe();\n  }, []);\n}","import React, { useState } from 'react';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { filter, withLatestFrom } from 'rxjs/operators';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nimport Step from '../step/step.component';\n\nimport { range } from '../../utils/range.util';\nimport { IChannel } from '../../interfaces/channel.interface';\nimport { IState } from '../../interfaces/state.interface';\nimport { InstrumentConfig } from '../../enums/instrument.enum';\nimport { useObservableEffect } from '../../hooks/use-observable-effect.hook';\n\ninterface ISequenceProps {\n  clock$: Observable<IState>;\n  channel$: BehaviorSubject<IChannel>;\n}\n\nconst STEPS = 16;\nconst DEFAULT_STEPS = range(1, STEPS).map(() => false);\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      padding: '5px !important',\n    },\n  }),\n);\n\nexport default function Sequence({ clock$, channel$ }: ISequenceProps) {\n  const [steps, setSteps] = useState([...DEFAULT_STEPS]);\n  const [currentStep, setCurrentStep] = useState<number | null>(null);\n\n  const classes = useStyles();\n\n  const updateSteps = (step: number, isOn: boolean) => { \n    const tempSteps = steps;\n\n    tempSteps[step] = isOn;\n    channel$.next({\n      ...channel$.value,\n      steps: tempSteps,\n    });\n  };\n\n  const sequence$ = clock$.pipe(withLatestFrom(channel$), filter(([{ play }]: [IState, IChannel]) => play));\n\n  useObservableEffect(\n    sequence$,\n    ([{ step }, { steps, instrument, volume }]: [IState, IChannel]) => {\n      setSteps(steps);\n      setCurrentStep(step);\n\n      if (instrument && volume && steps[step]) {\n        // console.log(`\\n----PLAY----step\\n`);\n        InstrumentConfig[instrument]?.trigger();\n      }\n    }  \n  );\n\n  return (\n    <Box className={classes.root} border={1} width='590px'>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Grid container direction='row' justify='center' spacing={2}>\n              {steps.map((step, i) => (\n                <Grid key={i} item>\n                    <Step\n                      step={i}\n                      isOn={!!step}\n                      isCurrentStep={i === currentStep}\n                      updateSteps={updateSteps}\n                    />\n                </Grid>\n              ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","export function range(start: number, end: number) {\n  return Array.from({ length: end - start + 1 }, (_, i) => i);\n}","import React, { useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\n\nimport Box from '@material-ui/core/Box';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport { Instrument } from '../../enums/instrument.enum';\nimport { IChannel } from '../../interfaces/channel.interface';\n\ninterface IControlProp {\n  channel$: BehaviorSubject<IChannel>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '5px !important',\n    },\n    formControl: {\n      margin: theme.spacing(0),\n      minWidth: 120,\n    },\n  }),\n);\n\nexport default function Controls({ channel$ }: IControlProp) {\n  const [isOn, setOn] = useState(false);\n  const [instrument, setInstrument] = useState('');\n\n  const classes = useStyles();\n\n  const updateInstrument = (newInstrument: Instrument) => {\n    channel$.next({\n      ...channel$.value,\n      instrument: newInstrument, \n    });\n  };\n\n  const updateVolume = (volume: number, isOn: boolean) => {\n    setOn(isOn);\n    channel$.next({\n      ...channel$.value,\n      volume, \n    });\n  };\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setInstrument(event.target.value as string);\n    updateInstrument(event.target.value as Instrument)\n  };\n\n  return (\n    <Box\n      className={classes.root}  \n      display='flex'\n      flexDirection='row'\n      justifyContent='space-between'\n      border={1}\n      height='42px'\n      width='210px'\n    >\n      <FormControl className={classes.formControl}>\n        <Select\n          displayEmpty\n          id='instrument-select'\n          value={instrument}\n          onChange={handleChange}\n        >\n          <MenuItem value='' disabled><em>Instrument</em></MenuItem>\n          {Object.entries(Instrument).map(([value, instrument], key) => <MenuItem key={key} value={value}>{instrument}</MenuItem>)}\n        </Select>\n      </FormControl>\n      { isOn ? <VolumeOffIcon style={{ cursor: 'pointer', margin: '4px' }} onClick={() => updateVolume(100, !isOn)} /> : <VolumeUpIcon style={{ cursor: 'pointer', margin: '4px' }} onClick={() => updateVolume(0, !isOn)} /> }\n    </Box>\n  );\n}","import { Instrument } from \"../enums/instrument.enum\";\n\nexport interface IChannel {\n  id: number;\n  instrument: Instrument | null;\n  play: boolean;\n  volume: number;\n  steps: boolean[];\n}\n\nexport const getInitialChannel = (id: number) => ({\n  id,\n  instrument: null,\n  play: true,\n  volume: 100,\n  steps: [\n    false, false, false, false,\n    false, false, false, false,\n    false, false, false, false,\n    false, false, false, false,\n  ],\n});","import React from 'react';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nimport Sequence from '../sequence/sequence.component';\nimport Controls from '../controls/controls.component';\nimport { IState } from '../../interfaces/state.interface';\nimport { getInitialChannel, IChannel } from '../../interfaces/channel.interface';\n\ninterface IChannelProps {\n  id: number;\n  clock$: Observable<IState>;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      padding: '10px !important',\n    },\n  }),\n);\n\nexport default function Channel({ id, clock$ }: IChannelProps) {\n  const classes = useStyles();\n  const channel$ = new BehaviorSubject<IChannel>(getInitialChannel(id));\n\n  return (\n    <Box\n      className={classes.root}\n      display='flex'\n      flexDirection='row'\n      border={1}\n      justifyContent='space-between'\n      width='840px'\n      marginBottom='5px'\n    >\n      <Controls channel$={channel$} />\n      <Sequence clock$={clock$} channel$={channel$} />\n    </Box>\n  );\n}","export interface IState {\n  bpm: number;\n  step: number;\n  pauseStep: number;\n  play: boolean;\n}\n\nexport const INITIAL_STATE: IState = {\n  play: false,\n  step: 0,\n  pauseStep: 0,\n  bpm: 100,\n};\n","\nexport const noop = (...args: any[]): any => { };","import React, { useState } from 'react';\nimport { ConnectableObservable, BehaviorSubject, merge } from 'rxjs';\n\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\n\nimport BpmControl from '../bpm/bpm.component';\nimport Channel from '../channel/channel.component';\nimport { clock } from '../../utils/clock.util';\nimport { IState } from '../../interfaces/state.interface';\nimport { useObservableEffect } from '../../hooks/use-observable-effect.hook';\nimport { noop } from '../../utils/noop.util';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      padding: '10px !important',\n      margin: '0 auto',\n    },\n    root: {\n      padding: '10px !important',\n    },\n    channel: {\n      padding: '3px 10px !important'\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    bpmControl: {\n      'margin-left': 'auto',\n    },\n  }),\n);\n\nconst play$ = new BehaviorSubject({ play: false });\nconst bpm$ = new BehaviorSubject({ bpm: 130 });\nconst boardEvents$ = merge(\n  play$,\n  bpm$,\n);\nconst clock$ = clock(boardEvents$);\n\nexport default function Board() {\n  useObservableEffect(clock$, noop, () => (clock$ as ConnectableObservable<IState>).connect());\n\n  const classes = useStyles();\n\n  const DEFAULT_CHANNELS = [...Array(1)].map((_, i) => <Channel key={i} id={i} clock$={clock$} />);\n\n  const [channels, setChannels] = useState(DEFAULT_CHANNELS);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const updatePlay = (isPlay: boolean) => {\n    setIsPlaying(isPlay);\n    play$.next({ play: isPlay });\n  };\n\n  const addChannel = () => setChannels([...channels, (<Channel key={channels.length + 1} id={channels.length + 1}  clock$={clock$} />)]);\n  // const removeChannel = (i: number) => setChannels([...channels.slice(0, i), ...channels.slice(i + 1)]);\n  \n  return (\n    <Box\n      className={classes.wrapper}\n      display='flex'\n      flexDirection='column'\n      border={1}\n      width='880px'\n    >\n      <Box\n        className={classes.root}\n        display='flex'\n        flexDirection='row'\n      >\n        <Typography variant='h5'>RxJS Drum Machine</Typography>\n        <Box className={classes.bpmControl}><BpmControl bpm$={bpm$} /></Box>\n      </Box>\n    \n      {channels.map((channel, i) => (\n        <Box\n          key={i}\n          className={classes.channel}\n          display='flex'\n          flexDirection='row'\n        >{channel}</Box>\n      ))}\n      <Box\n        className={classes.root}\n        display='flex'\n        flexDirection='row'\n        justifyContent='flex-end'\n      >\n        <Box marginRight='auto'>\n          <Button\n            variant='contained'\n            color='primary'\n            disabled={channels.length > 6}\n            className={classes.button}\n            startIcon={<AddIcon />}\n            onClick={addChannel}\n          >\n            Channel\n          </Button>\n        </Box>\n        <Button\n          variant='contained'\n          color='secondary'\n          className={classes.button}\n          startIcon={<PauseIcon />}\n          disabled={!isPlaying}\n          onClick={() => updatePlay(false)}\n        >\n          Pause\n        </Button>\n        <Button\n          variant='contained'\n          color='primary'\n          className={classes.button}\n          disabled={isPlaying}\n          startIcon={<PlayArrowIcon />}\n          onClick={() => updatePlay(true)}\n        >\n          Play\n        </Button>\n      </Box>\n    </Box>\n  );\n}","import { interval, Observable, NEVER } from 'rxjs';\nimport { startWith, scan, switchMap, map, tap, publish } from 'rxjs/operators';\nimport { bpmToMs } from './bpm-to-ms.util';\nimport { IState, INITIAL_STATE } from '../interfaces/state.interface';\n\nexport const clockPipeline = (boardEvents$: Observable<any>) => boardEvents$.pipe(\n  startWith(INITIAL_STATE),\n  scan((state: IState, curr: IState): IState => ({\n      ...state,\n      ...curr,\n      pauseStep: state.step, // restart after pause on last step\n    }),\n    {} as IState,\n  ),\n  switchMap((state: IState) => state.play\n    ? interval(bpmToMs(state.bpm)).pipe(\n        tap((i) => {\n          state.step = (i + state.pauseStep) % 16;\n        }),\n        map(() => state),\n    )\n    : NEVER,\n  ),\n);\n\nexport const clock = (boardEvents$: Observable<any>) => clockPipeline(boardEvents$).pipe(publish()); ","export const bpmToMs = (bpm: number) => bpm > 0 ? 60000 / bpm : Infinity;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport './App.scss';\n\nimport Board from './components/board/board.component';\n\nfunction App() {\n  // const prefersDarkMode = true; // TODO: add option to set;\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: 'dark',\n          primary: {\n            main: '#63d8ce',\n          },\n          secondary: {\n            main: '#d8636d',\n          }\n        },\n      }),\n    [],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container fixed>\n        <div className='App'>\n          <Board />\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}